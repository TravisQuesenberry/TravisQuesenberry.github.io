---
layout: essay
type: essay
title: "Reflection on Software Engineering I"
# All dates must be YYYY-MM-DD format!
date: 2023-12-11
published: true
labels:
  - ICS 314(Software Engineering I)
---

Throughout this course in software engineering, I have gained a deeper understanding of the functions and concepts within the field.  I learned about many foundational concepts and strategies that will be used when working with software and how they can enhance my progress and performance.  I believe that the main skills that I will leave this course with are the understanding of how to work with a development team and work with multiple people on a project through GitHub and other mediums. 
Agile Project Management
Working though our final project site has presented many challenges to our group as we had difficulties understanding an effective way of approaching our problem initially.  After failing to get anywhere we decided to follow the agile process of development.  One facet within Agile, Issue Driven Project Management, involves the structured tracking of issues and tasks.  We were able to effectively assess what our tasks were and more smoothly address issues.  Having a team that is on the same page as you is extremely helpful in multi-work projects like this one as having others who understand your codebase make solving problems a team effort rather than individually.   Its applicability transcends web applications; itâ€™s a dynamic framework adaptable to any project type.  Project Management instills an organized, collaborative, and responsive approach to problem-solving and I will likely use it again in a future workspace.  
Design Patterns
	Problem solving plays a crucial role in the process of software development.  There are countless situations that will arise when working the kinks out of one specific issue.  This makes it very time consuming to work on each individual problem from scratch.  For this reason Design Patterns have been a helpful method in my problem solving process throughout this course.  Having an archive of solutions to common problems is helpful as instead of working through issues multiple times, you can just reference a past solution to a similar issue and save time. Design Patterns act as a repository of best practices extracted from different collective experiences.  By leveraging these patterns, software engineers can effectively tackle common problems without starting from scratch. This not only accelerates the development process but also fosters consistency and reliability in software design.	
Configuration Management
	Lastly, using the Configuration Management process in the final project was crucial to maintaining the functionality of our site.  Through the many different commits, making sure that each individual group member's changes do not conflict with the main version are important for maintaining the site.  Each environment demands distinct settings, such as database URLs and API keys, ensuring seamless functionality across different stages.  Version control systems like Git play a crucial role, enabling meticulous tracking of alterations in source code and configurations.  Overall, the Configuration Management system allowed us to maintain the functionality our our site over many versions and while running through a longer time of data.

	Throughout this course, these concepts emerged within the context of web application development but their significance extends far beyond this domain. They've become fundamental building blocks, expanding the skill set of a software engineer well beyond web-related projects. By delving into these concepts, I've gained a deeper understanding of their versatility and universal application in various software engineering domains. This course has been a journey not only into web development but also into a holistic understanding of software engineering, equipping me to navigate diverse technological landscapes and tackle intricate challenges.
